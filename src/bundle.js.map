{"version":3,"sources":["webpack:///webpack/bootstrap 7f854342d56d0c43e24f","webpack:///./src/player.js","webpack:///./src/board.js","webpack:///./src/computer.js","webpack:///./src/index.js","webpack:///./src/game.js","webpack:///./src/game_view.js","webpack:///./src/moving_objects.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,2BAA2B;AAC9C;AACA,qBAAqB,wBAAwB;AAC7C;AACA,0BAA0B;AAC1B;AACA,SAAS;AACT;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oCAAoC;AACvD,qBAAqB,iCAAiC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvDA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;ACvBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA","file":"./src/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7f854342d56d0c43e24f","class Player {\n  constructor(options) {\n    this.ctx = options.ctx;\n    this. canvas = options.canvas;\n    this.img = options.img;\n    this.startPosition = { x: 0, y: 65 };\n  }\n\n  drawPlayer() {\n    this.ctx.drawImage(this.img, this.startPosition.x, this.startPosition.y,\n                       44, 44);\n  }\n}\n\nmodule.exports = Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/player.js\n// module id = 0\n// module chunks = 0","class Board {\n  constructor(options) {\n    this.ctx = options.ctx;\n    this.x = options.width;\n    this.y = options.height;\n    this.canvas = options.canvasEl;\n    this.brickColumnCount = 25;\n    this.brickRowCount = 12;\n    this.brickWidth = 44;\n    this.brickHeight = 44;\n  }\n\n  drawBricks() {\n    const brickOffsetLeft = 44;\n    const brickOffsetTop = 65;\n    const brickPadding = 44;\n\n    const bricks = [];\n    for (let c = 0; c < this.brickColumnCount; c++) {\n      bricks[c] = [];\n      for (let r = 0; r < this.brickRowCount; r++) {\n        if (c % 5 === 0) {\n          bricks[c][r] = { x: 0, y: 0, status: 2 };\n          this.ctx.fillStyle = \"#F1F7ED\";\n        } else {\n          let displayBrick = Math.floor(Math.random() * 2);\n          bricks[c][r] = { x: 0, y: 0, status: displayBrick};\n          this.ctx.fillStyle = \"#A4243B\";\n        }\n        if (bricks[c][r].status === 2 || bricks[c][r].status === 1) {\n          let brickX = (c * (this.brickWidth + brickPadding)) + brickOffsetLeft;\n          let brickY = (r * (this.brickHeight + brickPadding)) + brickOffsetTop;\n          bricks[c][r].x = brickX;\n          bricks[c][r].y = brickY;\n\n          this.ctx.beginPath();\n          this.ctx.rect(brickX, brickY, this.brickWidth, this.brickHeight);\n          this.ctx.fill();\n          this.ctx.closePath();\n        }\n      }\n    }\n  }\n\n  getBrickColumnCount(){\n    return this.brickColumnCount;\n  }\n\n  getBrickRowCount() {\n    return this.brickRowCount;\n  }\n\n  getBrickWidth() {\n    return this.brickWidth;\n  }\n\n  getBrickHeight() {\n    return this.brickHeight;\n  }\n\n\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawBricks();\n  }\n}\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/board.js\n// module id = 1\n// module chunks = 0","const MovingObject = require('./moving_objects');\n\nclass Computer extends MovingObject {\n  constructor(options) {\n    super(options);\n    options.velocity = options.velocity || [1, 0];\n    options.position = options.position;\n    this.ctx = options.ctx;\n    this.canvas = options.canvasEl;\n    this.img = options.img;\n    this.board = options.board;\n    this.position = { x: options.canvasEl.width - 44, y: options.canvasEl.height - 44};\n    this.startPosition = { x: options.canvasEl.width - 44, y: options.canvasEl.height - 44, status: 1 };\n    this.dx = 2;\n    this.dy = -2;\n  }\n\n  drawPlayer() {\n    this.ctx.drawImage(this.img, this.startPosition.x,\n                       this.startPosition.y, 44, 44);\n  }\n\n  collisionDetection() {\n    const bricks = [];\n    for (let c = 0; c < this.board.getBrickColumnCount; c++) {\n      for (let r = 0; r < this.board.getBrickRowCount; r++) {\n        let b = bricks[c][r];\n        if (b.status === 2) {\n          if (this.x > b.x && this.x < b.x + this.board.getBrickWidth) {\n            this.dx = this.dx * -1;\n          }\n          if (this.y > b.y && this.y < b.y + this.board.getBrickHeight) {\n            this.dy = this.dy * -1;\n          }\n        }\n      }\n    }\n  }\n\n  movePlayer(delta) {\n    this.move(delta);\n  }\n\n  step(delta) {\n    this.movePlayer(delta);\n    this.x += this.dx;\n    this.y += this.dy;\n    this.collisionDetection();\n  }\n\n  isComputerDead() {\n    return this.startPosition.status === 0;\n  }\n}\n\nmodule.exports = Computer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/computer.js\n// module id = 2\n// module chunks = 0","const GameView = require(\"./game_view\");\nconst Game = require(\"./game\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById('my-canvas');\n  const ctx = canvasEl.getContext('2d');\n\n  const howToButton = document.getElementById('how-to');\n  howToButton.addEventListener(\"click\", toggleModal, false);\n  const closeButton = document.getElementById('close');\n  closeButton.addEventListener(\"click\", toggleModal, false);\n\n  const game = new Game(canvasEl, ctx);\n  new GameView(game, canvasEl, ctx).start();\n});\n\nfunction toggleModal() {\n  const modal = document.getElementsByClassName('modal')[0];\n  if (modal.style.visibility === 'visible') {\n    modal.style.visibility = 'hidden';\n  } else {\n    modal.style.visibility = 'visible';\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 4\n// module chunks = 0","const Board = require(\"./board\");\nconst Computer = require(\"./computer\");\nconst Player = require(\"./player\");\n\nclass Game {\n  constructor(canvasEl, ctx) {\n    this.canvasEl = canvasEl;\n    this.ctx = ctx;\n    this.board = [];\n    this.computer = [];\n    this.player = [];\n  }\n\n  add(obj) {\n    if (obj instanceof Board) {\n      this.board.push(obj);\n    } else if (obj instanceof Computer) {\n      this.computer.push(obj);\n    } else if (obj instanceof Player) {\n      this.player.push(obj);\n    }\n  }\n\n  addBoard() {\n    const board = new Board({\n      canvasEl: this.canvasEl,\n      ctx: this.ctx,\n      width: this.canvasEl.width,\n      height: this.canvasEl.height-65\n    });\n    this.add(board);\n\n    board.draw();\n\n    return board;\n  }\n\n  addComputer() {\n    const computerSprite = new Image();\n    const computer = new Computer({\n      ctx: this.ctx,\n      canvasEl: this.canvasEl,\n      img: computerSprite,\n      board: this.board,\n      velocity: [0,0],\n\n    });\n\n    this.add(computer);\n\n    computerSprite.addEventListener(\"load\", function() {\n      computer.drawPlayer();\n    }, false);\n    computerSprite.src = 'src/assets/orange_player.svg';\n\n    return computer;\n  }\n\n  addPlayer() {\n    const playerSprite = new Image();\n    const player = new Player({\n      ctx: this.ctx,\n      canvasEl: this.canvasEl,\n      img: playerSprite,\n      board: this.board\n    });\n\n    this.add(player);\n\n    playerSprite.addEventListener(\"load\", function() {\n      player.drawPlayer();\n    }, false);\n    playerSprite.src = 'src/assets/navy_blue_player.svg';\n\n    return player;\n  }\n\n  allObjects() {\n    return [].concat(this.board, this.computer, this.player);\n  }\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/game.js\n// module id = 5\n// module chunks = 0","class GameView {\n  constructor(game, canvasEl, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.canvasEl = canvasEl;\n    this.computer = this.game.addComputer();\n    this.board = this.game.addBoard();\n    this.player = this.game.addPlayer();\n  }\n\n  bindComputerHandlers() {\n    const computer = this.computer;\n\n    if (!this.computer.isComputerDead()) {\n      Object.keys(GameView.MOVES).forEach( stepTaken => {\n        const move = GameView.MOVES[stepTaken];\n        this.computer.movePlayer(move);\n      });\n\n    }\n  }\n\n  start() {\n    this.bindComputerHandlers();\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n    this.computer.step(timeDelta);\n    this.lastTime = time;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nGameView.MOVES = {\n  a: [-1, 0],\n  b: [0, -1],\n  c: [0, 1],\n  d: [1, 0]\n};\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/game_view.js\n// module id = 6\n// module chunks = 0","class MovingObject {\n  constructor(options) {\n    this.velocity = options.velocity;\n    this.position = options.position;\n  }\n\n  move(timeDelta) {\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA;\n     let offsetX = this.velocity[0] * velocityScale;\n     let offsetY = this.velocity[1] * velocityScale;\n\n     this.position = (this.position[0] + offsetX, this.position[1] + offsetY);\n  }\n\n\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 60;\n\nmodule.exports = MovingObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/moving_objects.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}